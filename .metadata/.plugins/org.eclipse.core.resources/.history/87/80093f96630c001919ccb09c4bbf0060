package dss.miguel.p2.modelo;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.EntityTransaction;

public enum BDUsuario {
	
	INSTANCE; //Buena forma de implementar un singleton
	
	private static final String PERSISTENCE_UNIT_NAME = "practica2";
	private static EntityManagerFactory factoria;
/*	private final EntityManagerFactory factoria = Persistence.createEntityManagerFactory(PERSISTENCE_UNIT_NAME);
	private final EntityManager em = factoria.createEntityManager();
	
	private BDUsuario() {
		Usuario u1 = new Usuario("Fernando", "u1@email.com");
		Usuario u2 = new Usuario("Hernando", "u2@email.com");
		
		EntityTransaction t = em.getTransaction();
		t.begin();
		em.persist(u1);
		em.persist(u2);
		t.commit();
		em.close();
	}
	
	public List<Usuario> getUsuarios(){
		Query q = em.createQuery("SELECT * FROM Usuario u");
		@SuppressWarnings("unchecked")
		List<Usuario> results = q.getResultList();
		for (Usuario u : results)
			System.out.println(u.toString());
		System.out.println("La base de datos tiene " + results.size() + " usuarios");
		return results;
	}
	
	public void postUsuario(String name, String email) {
		Usuario u = new Usuario(name, email);
		EntityTransaction t = em.getTransaction();
		t.begin();
		em.persist(u);
		t.commit();
		em.close();
	}
	
	public void deleteUsuario(String id) {
		EntityTransaction t = em.getTransaction();
		t.begin();
		Query q = em.createQuery("DELETE FROM Usuario WHERE id="+id);
		q.executeUpdate();
		t.commit();
		em.close();
	}*/
	
	public static void main(String[] args) {
		EntityManagerFactory factoria = Persistence.createEntityManagerFactory(PERSISTENCE_UNIT_NAME);
		EntityManager em = factoria.createEntityManager();
		Query q = em.createQuery("SELECT u FROM Usuario u");
		
		Usuario u = new Usuario("name", "email");
		EntityTransaction t = em.getTransaction();
		t.begin();
		em.persist(u);
		t.commit();
		@SuppressWarnings("unchecked")
		List<Usuario> results = q.getResultList();
		for (Usuario us : results)
			System.out.println(u.toString());
		System.out.println("La base de datos tiene " + results.size() + " usuarios");
		
		t.begin();
		Query q2 = em.createQuery("DELETE FROM Usuario WHERE id="+3);
		q2.executeUpdate();
		t.commit();
		results = q.getResultList();
		for (Usuario us : results)
			System.out.println(u.toString());
		System.out.println("La base de datos tiene " + results.size() + " usuarios");
		em.close(); //Debe ser la ultima linea a utilizar el Entity Manager
	}
}